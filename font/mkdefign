#! /usr/bin/perl

use strict;
use warnings;

# Generate C includable list of default ignorable characters.

my %prop = ();

# read

my $UNICODE = $ENV{UNICODE};
die "Error: Expected $UNICODE directory containing 'derivedcoreproperties.txt' not set.\n".
   "    Possibly download from www.unicode.org and set enviroment variable.\n"
    unless $UNICODE;

my $fn;
$fn = "$UNICODE/derivedcoreproperties.txt";
$fn = "$UNICODE/DerivedCoreProperties.txt" unless -f $fn;

open (my $f, '<', $fn) or
    die "Error: Unable to open '$fn': $@\n";
LINE: while (<$f>) {
    s/#.*//;
    s/^\s+//;
    s/\s+$//;
    next LINE if /^$/;
    if (/^([0-9A-Fa-f]+)(?:\s*\.\.\s*([0-9A-Fa-f]+))?\s*;\s*(\S+)$/) {
        my ($first, $last, $name) = ($1,$2,$3);
        for my $c (hex($first)..hex($last // $first)) {
            $prop{lc($name)}{$c} = 1;
        }
    }
    else {
        die "Error: In '$fn': Unable to parse line: $_\n";
    }
}
close($f);

# write

print "/* -*- Mode: C -*- */\n";
my $first = undef;
my $last = undef;
for my $e (sort { $a <=> $b } keys %{ $prop{default_ignorable_code_point} }) {
    if (defined $last && ($e != ($last + 1))) {
        printf "    { 0x%06X, 0x%06X },\n", $first, $last;
        $first = $last = $e;
    }
    $first = $e unless defined $first;
    $last = $e;
}
if (defined $last) {
    printf "    { 0x%06X, 0x%06X },\n", $first, $last;
}
