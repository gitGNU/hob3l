#! /usr/bin/perl

my %disass = ();
my %name = ();

sub read_unidata()
{
    unless (defined $ENV{UNIDATA}) {
        die "Error: \$UNIDATA not set, please point to unicodedata.txt (download\n".
            "    from www.unicode.org)\n";
    }
    open(my $f, '<', $ENV{UNIDATA}) or
        die "Error: Unable to read '$ENV{UNIDATA}': $@\n";
    while (<$f>) {
        my @s = split /;/;
        my $code = hex($s[0]);
        my $name = uc($s[1]);
        $name{$code} = $name;
        my $disass = $s[5];
        if ($disass ne '') {
            my @disass_hex = split /\s+/, $disass;
            my $type = 'equiv';
            if ($disass_hex[0] =~ /^<(.*)>$/) {
                $type = $1;
                shift @disass_hex;
            }
            my @disass = map { hex($_) } @disass_hex;
            push @{ $disass{$type} }, {
               code => $code,
               disass => [@disass],
            };
        }
    }
    close($f);
}

read_unidata();

for my $type (sort keys %disass) {
    print "CP_UNUSED\n";
    print "static unsigned const *unicode_comp_$type"."[] = {\n";
    for my $d (@{ $disass{$type} }) {
        print "    (unsigned const[]){\n";
        print "        ".scalar(@{ $d->{disass} }).",\n";
        for my $c ($d->{code}, @{ $d->{disass} }) {
            printf "        0x%06x, /* %s */\n", $c, $name{$c} // '';
        }
        print "    },\n",
    }
    print "};\n";
}
